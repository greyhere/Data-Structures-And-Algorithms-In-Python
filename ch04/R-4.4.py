''' R-4.4
Draw the recursion trace for the execution of function reverse(S, 0, 5)
(Code Fragment 4.10) on S = [4, 3, 6, 2, 6].
'''


def reverse(S, start, stop):
    '''Reverse elements implicit slice S[start:stop].'''
    if start < stop - 1:
        S[start], S[stop - 1] = S[stop - 1], S[start]
        reverse(S, start+1, stop-1)

S = [4, 3, 6, 2, 6]
reverse(S, 0, 5)
print(S)

''' Recursion trace for an execution of reverse(S, 0, 5) with input
parameters S = [4, 3, 6, 2, 6],

reverse(S, 0, 5) -> S[6, 3, 6, 2, 4]

    reverse(S, 1, 4) -> S[6, 2, 6, 3, 4]

        reverse(S, 2, 3) -> does nothing

Note that in this recursion, the swaps happen before the next recursive call,
and the return is None.
The results generated by each recursive call is shown on the right of the
respective calls.
'''
